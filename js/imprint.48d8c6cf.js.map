{"version":3,"file":"js/imprint.48d8c6cf.js","mappings":"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","sources":["webpack://portfolio-v3/../../../src/components/VList/list.ts","webpack://portfolio-v3/../../../src/composables/nested/activeStrategies.ts","webpack://portfolio-v3/../../../src/composables/nested/openStrategies.ts","webpack://portfolio-v3/../../../src/composables/nested/selectStrategies.ts","webpack://portfolio-v3/../../../src/composables/nested/nested.ts","webpack://portfolio-v3/../../../src/components/VList/VListGroup.tsx","webpack://portfolio-v3/../../../src/components/VList/VListItemSubtitle.tsx","webpack://portfolio-v3/../../../src/components/VList/VListItemTitle.ts","webpack://portfolio-v3/../../../src/components/VList/VListItem.tsx","webpack://portfolio-v3/../../../src/components/VList/VListSubheader.tsx","webpack://portfolio-v3/../../../src/components/VList/VListChildren.tsx","webpack://portfolio-v3/../../src/composables/list-items.ts","webpack://portfolio-v3/../../../src/components/VList/VList.tsx","webpack://portfolio-v3/./src/views/policy/Imprint.vue","webpack://portfolio-v3/./src/views/policy/Imprint.vue?6667"],"sourcesContent":["// Utilities\nimport { computed, inject, provide, shallowRef } from 'vue'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\n// Depth\nexport const DepthKey: InjectionKey<Ref<number>> = Symbol.for('vuetify:depth')\n\nexport function useDepth (hasPrepend?: Ref<boolean>) {\n  const parent = inject(DepthKey, shallowRef(-1))\n\n  const depth = computed(() => parent.value + 1 + (hasPrepend?.value ? 1 : 0))\n\n  provide(DepthKey, depth)\n\n  return depth\n}\n\n// List\nexport const ListKey: InjectionKey<{\n  hasPrepend: Ref<boolean>\n  updateHasPrepend: (value: boolean) => void\n}> = Symbol.for('vuetify:list')\n\nexport function createList () {\n  const parent = inject(ListKey, { hasPrepend: shallowRef(false), updateHasPrepend: () => null })\n\n  const data = {\n    hasPrepend: shallowRef(false),\n    updateHasPrepend: (value: boolean) => {\n      if (value) data.hasPrepend.value = value\n    },\n  }\n\n  provide(ListKey, data)\n\n  return parent\n}\n\nexport function useList () {\n  return inject(ListKey, null)\n}\n","/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue'\nimport { wrapInArray } from '@/util'\n\nexport type ActiveStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  activated: Set<unknown>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown>\n\nexport type ActiveStrategyTransformInFn = (\n  v: unknown | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => Set<unknown>\n\nexport type ActiveStrategyTransformOutFn = (\n  v: Set<unknown>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown\n\nexport type ActiveStrategy = {\n  activate: ActiveStrategyFn\n  in: ActiveStrategyTransformInFn\n  out: ActiveStrategyTransformOutFn\n}\n\nexport const independentActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const strategy: ActiveStrategy = {\n    activate: ({ id, value, activated }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value && activated.size === 1 && activated.has(id)) return activated\n\n      if (value) {\n        activated.add(id)\n      } else {\n        activated.delete(id)\n      }\n\n      return activated\n    },\n    in: (v, children, parents) => {\n      let set = new Set()\n\n      if (v != null) {\n        for (const id of wrapInArray(v)) {\n          set = strategy.activate({\n            id,\n            value: true,\n            activated: new Set(set),\n            children,\n            parents,\n          })\n        }\n      }\n\n      return set\n    },\n    out: v => {\n      return Array.from(v)\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ activated, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = activated.has(id) ? new Set([id]) : new Set()\n      return parentStrategy.activate({ ...rest, id, activated: singleSelected })\n    },\n    in: (v, children, parents) => {\n      let set = new Set()\n\n      if (v != null) {\n        const arr = wrapInArray(v)\n        if (arr.length) {\n          set = parentStrategy.in(arr.slice(0, 1), children, parents)\n        }\n      }\n\n      return set\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ id, activated, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return activated\n\n      return parentStrategy.activate({ id, activated, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentSingleActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ id, activated, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return activated\n\n      return parentStrategy.activate({ id, activated, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n","export type OpenStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  opened: Set<unknown>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown>\n\nexport type OpenSelectStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  opened: Set<unknown>\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown> | null\n\nexport type OpenStrategy = {\n  open: OpenStrategyFn\n  select: OpenSelectStrategyFn\n}\n\nexport const singleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      const newOpened = new Set<unknown>()\n      newOpened.add(id)\n\n      let parent = parents.get(id)\n\n      while (parent != null) {\n        newOpened.add(parent)\n        parent = parents.get(parent)\n      }\n\n      return newOpened\n    } else {\n      opened.delete(id)\n      return opened\n    }\n  },\n  select: () => null,\n}\n\nexport const multipleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      let parent = parents.get(id)\n      opened.add(id)\n\n      while (parent != null && parent !== id) {\n        opened.add(parent)\n        parent = parents.get(parent)\n      }\n\n      return opened\n    } else {\n      opened.delete(id)\n    }\n    return opened\n  },\n  select: () => null,\n}\n\nexport const listOpenStrategy: OpenStrategy = {\n  open: multipleOpenStrategy.open,\n  select: ({ id, value, opened, parents }) => {\n    if (!value) return opened\n\n    const path: unknown[] = []\n\n    let parent = parents.get(id)\n\n    while (parent != null) {\n      path.push(parent)\n      parent = parents.get(parent)\n    }\n\n    return new Set(path)\n  },\n}\n","/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue'\n\nexport type SelectStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\nexport type SelectStrategyTransformInFn = (\n  v: readonly unknown[] | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\nexport type SelectStrategyTransformOutFn = (\n  v: Map<unknown, 'on' | 'off' | 'indeterminate'>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown[]\n\nexport type SelectStrategy = {\n  select: SelectStrategyFn\n  in: SelectStrategyTransformInFn\n  out: SelectStrategyTransformOutFn\n}\n\nexport const independentSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 1 && on[0] === id) return selected\n      }\n\n      selected.set(id, value ? 'on' : 'off')\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      const map = new Map()\n\n      for (const id of (v || [])) {\n        strategy.select({\n          id,\n          value: true,\n          selected: map,\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: v => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on') arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ selected, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = selected.has(id) ? new Map([[id, selected.get(id)!]]) : new Map()\n      return parentStrategy.select({ ...rest, id, selected: singleSelected })\n    },\n    in: (v, children, parents) => {\n      if (v?.length) {\n        return parentStrategy.in(v.slice(0, 1), children, parents)\n      }\n\n      return new Map()\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSingleSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const classicSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected, children, parents }) => {\n      id = toRaw(id)\n      const original = new Map(selected)\n\n      const items = [id]\n\n      while (items.length) {\n        const item = items.shift()!\n\n        selected.set(toRaw(item), value ? 'on' : 'off')\n\n        if (children.has(item)) {\n          items.push(...children.get(item)!)\n        }\n      }\n\n      let parent = toRaw(parents.get(id))\n\n      while (parent) {\n        const childrenIds = children.get(parent)!\n        const everySelected = childrenIds.every(cid => selected.get(toRaw(cid)) === 'on')\n        const noneSelected = childrenIds.every(cid => !selected.has(toRaw(cid)) || selected.get(toRaw(cid)) === 'off')\n\n        selected.set(parent, everySelected ? 'on' : noneSelected ? 'off' : 'indeterminate')\n\n        parent = toRaw(parents.get(parent))\n      }\n\n      // If mandatory and planned deselect results in no selected\n      // items then we can't do it, so return original state\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 0) return original\n      }\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      let map = new Map()\n\n      for (const id of (v || [])) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: map,\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: (v, children) => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on' && !children.has(key)) arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n","// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  onBeforeMount,\n  onBeforeUnmount,\n  provide,\n  ref,\n  shallowRef,\n  toRaw,\n  toRef,\n} from 'vue'\nimport {\n  independentActiveStrategy,\n  independentSingleActiveStrategy,\n  leafActiveStrategy,\n  leafSingleActiveStrategy,\n} from './activeStrategies'\nimport { listOpenStrategy, multipleOpenStrategy, singleOpenStrategy } from './openStrategies'\nimport {\n  classicSelectStrategy,\n  independentSelectStrategy,\n  independentSingleSelectStrategy,\n  leafSelectStrategy,\n  leafSingleSelectStrategy,\n} from './selectStrategies'\nimport { consoleError, getCurrentInstance, getUid, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { ActiveStrategy } from './activeStrategies'\nimport type { OpenStrategy } from './openStrategies'\nimport type { SelectStrategy } from './selectStrategies'\nimport type { EventProp } from '@/util'\n\nexport type ActiveStrategyProp =\n  | 'single-leaf'\n  | 'leaf'\n  | 'independent'\n  | 'single-independent'\n  | ActiveStrategy\n  | ((mandatory: boolean) => ActiveStrategy)\nexport type SelectStrategyProp =\n  | 'single-leaf'\n  | 'leaf'\n  | 'independent'\n  | 'single-independent'\n  | 'classic'\n  | SelectStrategy\n  | ((mandatory: boolean) => SelectStrategy)\nexport type OpenStrategyProp = 'single' | 'multiple' | 'list' | OpenStrategy\n\nexport interface NestedProps {\n  activatable: boolean\n  selectable: boolean\n  activeStrategy: ActiveStrategyProp | undefined\n  selectStrategy: SelectStrategyProp | undefined\n  openStrategy: OpenStrategyProp | undefined\n  activated: any\n  selected: any\n  opened: any\n  mandatory: boolean\n  'onUpdate:activated': EventProp<[any]> | undefined\n  'onUpdate:selected': EventProp<[any]> | undefined\n  'onUpdate:opened': EventProp<[any]> | undefined\n}\n\ntype NestedProvide = {\n  id: Ref<unknown>\n  isGroupActivator?: boolean\n  root: {\n    children: Ref<Map<unknown, unknown[]>>\n    parents: Ref<Map<unknown, unknown>>\n    activatable: Ref<boolean>\n    selectable: Ref<boolean>\n    opened: Ref<Set<unknown>>\n    activated: Ref<Set<unknown>>\n    selected: Ref<Map<unknown, 'on' | 'off' | 'indeterminate'>>\n    selectedValues: Ref<unknown[]>\n    register: (id: unknown, parentId: unknown, isGroup?: boolean) => void\n    unregister: (id: unknown) => void\n    open: (id: unknown, value: boolean, event?: Event) => void\n    activate: (id: unknown, value: boolean, event?: Event) => void\n    select: (id: unknown, value: boolean, event?: Event) => void\n    openOnSelect: (id: unknown, value: boolean, event?: Event) => void\n    getPath: (id: unknown) => unknown[]\n  }\n}\n\nexport const VNestedSymbol: InjectionKey<NestedProvide> = Symbol.for('vuetify:nested')\n\nexport const emptyNested: NestedProvide = {\n  id: shallowRef(),\n  root: {\n    register: () => null,\n    unregister: () => null,\n    parents: ref(new Map()),\n    children: ref(new Map()),\n    open: () => null,\n    openOnSelect: () => null,\n    activate: () => null,\n    select: () => null,\n    activatable: ref(false),\n    selectable: ref(false),\n    opened: ref(new Set()),\n    activated: ref(new Set()),\n    selected: ref(new Map()),\n    selectedValues: ref([]),\n    getPath: () => [],\n  },\n}\n\nexport const makeNestedProps = propsFactory({\n  activatable: Boolean,\n  selectable: Boolean,\n  activeStrategy: [String, Function, Object] as PropType<ActiveStrategyProp>,\n  selectStrategy: [String, Function, Object] as PropType<SelectStrategyProp>,\n  openStrategy: [String, Object] as PropType<OpenStrategyProp>,\n  opened: null,\n  activated: null,\n  selected: null,\n  mandatory: Boolean,\n}, 'nested')\n\nexport const useNested = (props: NestedProps) => {\n  let isUnmounted = false\n  const children = ref(new Map<unknown, unknown[]>())\n  const parents = ref(new Map<unknown, unknown>())\n\n  const opened = useProxiedModel(props, 'opened', props.opened, v => new Set(v), v => [...v.values()])\n\n  const activeStrategy = computed(() => {\n    if (typeof props.activeStrategy === 'object') return props.activeStrategy\n    if (typeof props.activeStrategy === 'function') return props.activeStrategy(props.mandatory)\n\n    switch (props.activeStrategy) {\n      case 'leaf': return leafActiveStrategy(props.mandatory)\n      case 'single-leaf': return leafSingleActiveStrategy(props.mandatory)\n      case 'independent': return independentActiveStrategy(props.mandatory)\n      case 'single-independent':\n      default: return independentSingleActiveStrategy(props.mandatory)\n    }\n  })\n\n  const selectStrategy = computed(() => {\n    if (typeof props.selectStrategy === 'object') return props.selectStrategy\n    if (typeof props.selectStrategy === 'function') return props.selectStrategy(props.mandatory)\n\n    switch (props.selectStrategy) {\n      case 'single-leaf': return leafSingleSelectStrategy(props.mandatory)\n      case 'leaf': return leafSelectStrategy(props.mandatory)\n      case 'independent': return independentSelectStrategy(props.mandatory)\n      case 'single-independent': return independentSingleSelectStrategy(props.mandatory)\n      case 'classic':\n      default: return classicSelectStrategy(props.mandatory)\n    }\n  })\n\n  const openStrategy = computed(() => {\n    if (typeof props.openStrategy === 'object') return props.openStrategy\n\n    switch (props.openStrategy) {\n      case 'list': return listOpenStrategy\n      case 'single': return singleOpenStrategy\n      case 'multiple':\n      default: return multipleOpenStrategy\n    }\n  })\n\n  const activated = useProxiedModel(\n    props,\n    'activated',\n    props.activated,\n    v => activeStrategy.value.in(v, children.value, parents.value),\n    v => activeStrategy.value.out(v, children.value, parents.value),\n  )\n  const selected = useProxiedModel(\n    props,\n    'selected',\n    props.selected,\n    v => selectStrategy.value.in(v, children.value, parents.value),\n    v => selectStrategy.value.out(v, children.value, parents.value),\n  )\n\n  onBeforeUnmount(() => {\n    isUnmounted = true\n  })\n\n  function getPath (id: unknown) {\n    const path: unknown[] = []\n    let parent: unknown = id\n\n    while (parent != null) {\n      path.unshift(parent)\n      parent = parents.value.get(parent)\n    }\n\n    return path\n  }\n\n  const vm = getCurrentInstance('nested')\n\n  const nodeIds = new Set<unknown>()\n\n  const nested: NestedProvide = {\n    id: shallowRef(),\n    root: {\n      opened,\n      activatable: toRef(props, 'activatable'),\n      selectable: toRef(props, 'selectable'),\n      activated,\n      selected,\n      selectedValues: computed(() => {\n        const arr = []\n\n        for (const [key, value] of selected.value.entries()) {\n          if (value === 'on') arr.push(key)\n        }\n\n        return arr\n      }),\n      register: (id, parentId, isGroup) => {\n        if (nodeIds.has(id)) {\n          const path = getPath(id).map(String).join(' -> ')\n          const newPath = getPath(parentId).concat(id).map(String).join(' -> ')\n          consoleError(`Multiple nodes with the same ID\\n\\t${path}\\n\\t${newPath}`)\n          return\n        } else {\n          nodeIds.add(id)\n        }\n\n        parentId && id !== parentId && parents.value.set(id, parentId)\n\n        isGroup && children.value.set(id, [])\n\n        if (parentId != null) {\n          children.value.set(parentId, [...children.value.get(parentId) || [], id])\n        }\n      },\n      unregister: id => {\n        if (isUnmounted) return\n\n        nodeIds.delete(id)\n        children.value.delete(id)\n        const parent = parents.value.get(id)\n        if (parent) {\n          const list = children.value.get(parent) ?? []\n          children.value.set(parent, list.filter(child => child !== id))\n        }\n        parents.value.delete(id)\n      },\n      open: (id, value, event) => {\n        vm.emit('click:open', { id, value, path: getPath(id), event })\n\n        const newOpened = openStrategy.value.open({\n          id,\n          value,\n          opened: new Set(opened.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n\n        newOpened && (opened.value = newOpened)\n      },\n      openOnSelect: (id, value, event) => {\n        const newOpened = openStrategy.value.select({\n          id,\n          value,\n          selected: new Map(selected.value),\n          opened: new Set(opened.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n        newOpened && (opened.value = newOpened)\n      },\n      select: (id, value, event) => {\n        vm.emit('click:select', { id, value, path: getPath(id), event })\n\n        const newSelected = selectStrategy.value.select({\n          id,\n          value,\n          selected: new Map(selected.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n        newSelected && (selected.value = newSelected)\n\n        nested.root.openOnSelect(id, value, event)\n      },\n      activate: (id, value, event) => {\n        if (!props.activatable) {\n          return nested.root.select(id, true, event)\n        }\n\n        vm.emit('click:activate', { id, value, path: getPath(id), event })\n\n        const newActivated = activeStrategy.value.activate({\n          id,\n          value,\n          activated: new Set(activated.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n\n        if (newActivated.size !== activated.value.size) {\n          activated.value = newActivated\n        } else {\n          for (const value of newActivated) {\n            if (!activated.value.has(value)) {\n              activated.value = newActivated\n              return\n            }\n          }\n          for (const value of activated.value) {\n            if (!newActivated.has(value)) {\n              activated.value = newActivated\n              return\n            }\n          }\n        }\n      },\n      children,\n      parents,\n      getPath,\n    },\n  }\n\n  provide(VNestedSymbol, nested)\n\n  return nested.root\n}\n\nexport const useNestedItem = (id: Ref<unknown>, isGroup: boolean) => {\n  const parent = inject(VNestedSymbol, emptyNested)\n\n  const uidSymbol = Symbol(getUid())\n  const computedId = computed(() => id.value !== undefined ? id.value : uidSymbol)\n\n  const item = {\n    ...parent,\n    id: computedId,\n    open: (open: boolean, e: Event) => parent.root.open(computedId.value, open, e),\n    openOnSelect: (open: boolean, e?: Event) => parent.root.openOnSelect(computedId.value, open, e),\n    isOpen: computed(() => parent.root.opened.value.has(computedId.value)),\n    parent: computed(() => parent.root.parents.value.get(computedId.value)),\n    activate: (activated: boolean, e?: Event) => parent.root.activate(computedId.value, activated, e),\n    isActivated: computed(() => parent.root.activated.value.has(toRaw(computedId.value))),\n    select: (selected: boolean, e?: Event) => parent.root.select(computedId.value, selected, e),\n    isSelected: computed(() => parent.root.selected.value.get(toRaw(computedId.value)) === 'on'),\n    isIndeterminate: computed(() => parent.root.selected.value.get(toRaw(computedId.value)) === 'indeterminate'),\n    isLeaf: computed(() => !parent.root.children.value.get(computedId.value)),\n    isGroupActivator: parent.isGroupActivator,\n  }\n\n  onBeforeMount(() => {\n    !parent.isGroupActivator && parent.root.register(computedId.value, parent.id.value, isGroup)\n  })\n\n  onBeforeUnmount(() => {\n    !parent.isGroupActivator && parent.root.unregister(computedId.value)\n  })\n\n  isGroup && provide(VNestedSymbol, item)\n\n  return item\n}\n\nexport const useNestedGroupActivator = () => {\n  const parent = inject(VNestedSymbol, emptyNested)\n\n  provide(VNestedSymbol, { ...parent, isGroupActivator: true })\n}\n","// Components\nimport { VExpandTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { useList } from './list'\nimport { makeComponentProps } from '@/composables/component'\nimport { IconValue } from '@/composables/icons'\nimport { useNestedGroupActivator, useNestedItem } from '@/composables/nested/nested'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { makeTagProps } from '@/composables/tag'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent, genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VListGroupSlots = {\n  default: never\n  activator: { isOpen: boolean, props: Record<string, unknown> }\n}\n\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n\n  setup (_, { slots }) {\n    useNestedGroupActivator()\n\n    return () => slots.default?.()\n  },\n})\n\nexport const makeVListGroupProps = propsFactory({\n  /* @deprecated */\n  activeColor: String,\n  baseColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse',\n  },\n  expandIcon: {\n    type: IconValue,\n    default: '$expand',\n  },\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  title: String,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListGroup')\n\nexport const VListGroup = genericComponent<VListGroupSlots>()({\n  name: 'VListGroup',\n\n  props: makeVListGroupProps(),\n\n  setup (props, { slots }) {\n    const { isOpen, open, id: _id } = useNestedItem(toRef(props, 'value'), true)\n    const id = computed(() => `v-list-group--id-${String(_id.value)}`)\n    const list = useList()\n    const { isBooted } = useSsrBoot()\n\n    function onClick (e: Event) {\n      e.stopPropagation()\n      open(!isOpen.value, e)\n    }\n\n    const activatorProps = computed(() => ({\n      onClick,\n      class: 'v-list-group__header',\n      id: id.value,\n    }))\n\n    const toggleIcon = computed(() => isOpen.value ? props.collapseIcon : props.expandIcon)\n    const activatorDefaults = computed(() => ({\n      VListItem: {\n        active: isOpen.value,\n        activeColor: props.activeColor,\n        baseColor: props.baseColor,\n        color: props.color,\n        prependIcon: props.prependIcon || (props.subgroup && toggleIcon.value),\n        appendIcon: props.appendIcon || (!props.subgroup && toggleIcon.value),\n        title: props.title,\n        value: props.value,\n      },\n    }))\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-group',\n          {\n            'v-list-group--prepend': list?.hasPrepend.value,\n            'v-list-group--fluid': props.fluid,\n            'v-list-group--subgroup': props.subgroup,\n            'v-list-group--open': isOpen.value,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.activator && (\n          <VDefaultsProvider defaults={ activatorDefaults.value }>\n            <VListGroupActivator>\n              { slots.activator({ props: activatorProps.value, isOpen: isOpen.value }) }\n            </VListGroupActivator>\n          </VDefaultsProvider>\n        )}\n\n        <MaybeTransition transition={{ component: VExpandTransition }} disabled={ !isBooted.value }>\n          <div class=\"v-list-group__items\" role=\"group\" aria-labelledby={ id.value } v-show={ isOpen.value }>\n            { slots.default?.() }\n          </div>\n        </MaybeTransition>\n      </props.tag>\n    ))\n\n    return {\n      isOpen,\n    }\n  },\n})\n\nexport type VListGroup = InstanceType<typeof VListGroup>\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListItemSubtitleProps = propsFactory({\n  opacity: [Number, String],\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListItemSubtitle')\n\nexport const VListItemSubtitle = genericComponent()({\n  name: 'VListItemSubtitle',\n\n  props: makeVListItemSubtitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-item-subtitle',\n          props.class,\n        ]}\n        style={[\n          { '--v-list-item-subtitle-opacity': props.opacity },\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VListItemSubtitle = InstanceType<typeof VListItemSubtitle>\n","// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VListItemTitle = createSimpleFunctional('v-list-item-title')\n\nexport type VListItemTitle = InstanceType<typeof VListItemTitle>\n","// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useList } from './list'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { useNestedItem } from '@/composables/nested/nested'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, onBeforeMount, watch } from 'vue'\nimport { deprecate, EventProp, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type ListItemSlot = {\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n}\n\nexport type ListItemTitleSlot = {\n  title?: string | number\n}\n\nexport type ListItemSubtitleSlot = {\n  subtitle?: string | number\n}\n\nexport type VListItemSlots = {\n  prepend: ListItemSlot\n  append: ListItemSlot\n  default: ListItemSlot\n  title: ListItemTitleSlot\n  subtitle: ListItemSubtitleSlot\n}\n\nexport const makeVListItemProps = propsFactory({\n  active: {\n    type: Boolean,\n    default: undefined,\n  },\n  activeClass: String,\n  /* @deprecated */\n  activeColor: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  baseColor: String,\n  disabled: Boolean,\n  lines: [Boolean, String] as PropType<'one' | 'two' | 'three' | false>,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  nav: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  slim: Boolean,\n  subtitle: [String, Number],\n  title: [String, Number],\n  value: null,\n\n  onClick: EventProp<[MouseEvent | KeyboardEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'text' } as const),\n}, 'VListItem')\n\nexport const VListItem = genericComponent<VListItemSlots>()({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: makeVListItemProps(),\n\n  emits: {\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, slots, emit }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value === undefined ? link.href.value : props.value)\n    const {\n      activate,\n      isActivated,\n      select,\n      isOpen,\n      isSelected,\n      isIndeterminate,\n      isGroupActivator,\n      root,\n      parent,\n      openOnSelect,\n      id: uid,\n    } = useNestedItem(id, false)\n    const list = useList()\n    const isActive = computed(() =>\n      props.active !== false &&\n      (props.active || link.isActive?.value || (root.activatable.value ? isActivated.value : isSelected.value))\n    )\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isSelectable = computed(() => (!!list && (root.selectable.value || root.activatable.value || props.value != null)))\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || link.isClickable.value || isSelectable.value)\n    )\n\n    const roundedProps = computed(() => props.rounded || props.nav)\n    const color = computed(() => props.color ?? props.activeColor)\n    const variantProps = computed(() => ({\n      color: isActive.value ? color.value ?? props.baseColor : props.baseColor,\n      variant: props.variant,\n    }))\n\n    // useNestedItem doesn't call register until beforeMount,\n    // so this can't be an immediate watcher as we don't know parent yet\n    watch(() => link.isActive?.value, val => {\n      if (!val) return\n      handleActiveLink()\n    })\n    onBeforeMount(() => {\n      if (link.isActive?.value) handleActiveLink()\n    })\n    function handleActiveLink () {\n      if (parent.value != null) {\n        root.open(parent.value, true)\n      }\n      openOnSelect(true)\n    }\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(roundedProps)\n    const lineClasses = computed(() => props.lines ? `v-list-item--${props.lines}-line` : undefined)\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isOpen: isOpen.value,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value,\n    } satisfies ListItemSlot))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n\n      if (isGroupActivator) return\n\n      if (root.activatable.value) {\n        activate(!isActivated.value, e)\n      } else if (root.selectable.value) {\n        select(!isSelected.value, e)\n      } else if (props.value != null) {\n        select(!isSelected.value, e)\n      }\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        e.target!.dispatchEvent(new MouseEvent('click', e))\n      }\n    }\n\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag\n      const hasTitle = (slots.title || props.title != null)\n      const hasSubtitle = (slots.subtitle || props.subtitle != null)\n      const hasAppendMedia = !!(props.appendAvatar || props.appendIcon)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasPrependMedia = !!(props.prependAvatar || props.prependIcon)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n\n      list?.updateHasPrepend(hasPrepend)\n\n      if (props.activeColor) {\n        deprecate('active-color', ['color', 'base-color'])\n      }\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable.value,\n              'v-list-item--nav': props.nav,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              'v-list-item--slim': props.slim,\n              [`${props.activeClass}`]: props.activeClass && isActive.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            props.style,\n          ]}\n          tabindex={ isClickable.value ? (list ? -2 : 0) : undefined }\n          aria-selected={\n            isSelectable.value ? (\n              root.activatable.value ? isActivated.value\n              : root.selectable.value ? isSelected.value\n              : isActive.value\n            ) : undefined\n          }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={ isClickable.value && props.ripple }\n          { ...link.linkProps }\n        >\n          { genOverlays(isClickable.value || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-list-item__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      density={ props.density }\n                      image={ props.prependAvatar }\n                    />\n                  )}\n\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      density={ props.density }\n                      icon={ props.prependIcon }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.prependAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.prependIcon,\n                    },\n                    VListItemAction: {\n                      start: true,\n                    },\n                  }}\n                >\n                  { slots.prepend?.(slotProps.value) }\n                </VDefaultsProvider>\n              )}\n\n              <div class=\"v-list-item__spacer\" />\n            </div>\n          )}\n\n          <div class=\"v-list-item__content\" data-no-activator=\"\">\n            { hasTitle && (\n              <VListItemTitle key=\"title\">\n                { slots.title?.({ title: props.title }) ?? props.title }\n              </VListItemTitle>\n            )}\n\n            { hasSubtitle && (\n              <VListItemSubtitle key=\"subtitle\">\n                { slots.subtitle?.({ subtitle: props.subtitle }) ?? props.subtitle }\n              </VListItemSubtitle>\n            )}\n\n            { slots.default?.(slotProps.value) }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-list-item__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      density={ props.density }\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      density={ props.density }\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.appendIcon,\n                    },\n                    VListItemAction: {\n                      end: true,\n                    },\n                  }}\n                >\n                  { slots.append?.(slotProps.value) }\n                </VDefaultsProvider>\n              )}\n\n              <div class=\"v-list-item__spacer\" />\n            </div>\n          )}\n        </Tag>\n      )\n    })\n\n    return {\n      activate,\n      isActivated,\n      isGroupActivator,\n      isSelected,\n      list,\n      select,\n      root,\n      id: uid,\n      link,\n    }\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n","// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListSubheaderProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  sticky: Boolean,\n  title: String,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListSubheader')\n\nexport const VListSubheader = genericComponent()({\n  name: 'VListSubheader',\n\n  props: makeVListSubheaderProps(),\n\n  setup (props, { slots }) {\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    useRender(() => {\n      const hasText = !!(slots.default || props.title)\n\n      return (\n        <props.tag\n          class={[\n            'v-list-subheader',\n            {\n              'v-list-subheader--inset': props.inset,\n              'v-list-subheader--sticky': props.sticky,\n            },\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            { textColorStyles },\n            props.style,\n          ]}\n        >\n          { hasText && (\n            <div class=\"v-list-subheader__text\">\n              { slots.default?.() ?? props.title }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VListSubheader = InstanceType<typeof VListSubheader>\n","// Components\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\nimport { VListSubheader } from './VListSubheader'\nimport { VDivider } from '../VDivider'\n\n// Utilities\nimport { createList } from './list'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalListItem } from './VList'\nimport type { VListItemSlots } from './VListItem'\nimport type { GenericProps } from '@/util'\n\nexport type VListChildrenSlots<T> = {\n  [K in keyof Omit<VListItemSlots, 'default'>]: VListItemSlots[K] & { item: T }\n} & {\n  default: never\n  item: { props: InternalListItem['props'] }\n  divider: { props: InternalListItem['props'] }\n  subheader: { props: InternalListItem['props'] }\n  header: { props: InternalListItem['props'] }\n}\n\nexport const makeVListChildrenProps = propsFactory({\n  items: Array as PropType<readonly InternalListItem[]>,\n  returnObject: Boolean,\n}, 'VListChildren')\n\nexport const VListChildren = genericComponent<new <T extends InternalListItem>(\n  props: {\n    items?: readonly T[]\n    returnObject?: boolean\n  },\n  slots: VListChildrenSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VListChildren',\n\n  props: makeVListChildrenProps(),\n\n  setup (props, { slots }) {\n    createList()\n\n    return () => slots.default?.() ?? props.items?.map(({ children, props: itemProps, type, raw: item }) => {\n      if (type === 'divider') {\n        return slots.divider?.({ props: itemProps }) ?? (\n          <VDivider { ...itemProps } />\n        )\n      }\n\n      if (type === 'subheader') {\n        return slots.subheader?.({ props: itemProps }) ?? (\n          <VListSubheader { ...itemProps } />\n        )\n      }\n\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? (slotProps: any) => slots.subtitle?.({ ...slotProps, item }) : undefined,\n        prepend: slots.prepend ? (slotProps: any) => slots.prepend?.({ ...slotProps, item }) : undefined,\n        append: slots.append ? (slotProps: any) => slots.append?.({ ...slotProps, item }) : undefined,\n        title: slots.title ? (slotProps: any) => slots.title?.({ ...slotProps, item }) : undefined,\n      }\n\n      const listGroupProps = VListGroup.filterProps(itemProps)\n\n      return children ? (\n        <VListGroup\n          value={ itemProps?.value }\n          { ...listGroupProps }\n        >\n          {{\n            activator: ({ props: activatorProps }) => {\n              const listItemProps = {\n                ...itemProps,\n                ...activatorProps,\n                value: props.returnObject ? item : itemProps.value,\n              }\n\n              return slots.header\n                ? slots.header({ props: listItemProps })\n                : (\n                  <VListItem { ...listItemProps } v-slots={ slotsWithItem } />\n                )\n            },\n            default: () => (\n              <VListChildren\n                items={ children }\n                returnObject={ props.returnObject }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VListGroup>\n      ) : (\n        slots.item ? slots.item({ props: itemProps }) : (\n          <VListItem\n            { ...itemProps }\n            value={ props.returnObject ? item : itemProps.value }\n            v-slots={ slotsWithItem }\n          />\n        )\n      )\n    })\n  },\n})\n","// Utilities\nimport { computed, shallowRef, watchEffect } from 'vue'\nimport { deepEqual, getPropertyFromItem, isPrimitive, omit, pick, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalItem } from '@/composables/filter'\nimport type { Primitive, SelectItemKey } from '@/util'\n\nexport interface ListItem<T = any> extends InternalItem<T> {\n  title: string\n  props: {\n    [key: string]: any\n    title: string\n    value: any\n  }\n  children?: ListItem<T>[]\n}\n\nexport interface ItemProps {\n  items: any[]\n  itemTitle: SelectItemKey\n  itemValue: SelectItemKey\n  itemChildren: SelectItemKey\n  itemProps: SelectItemKey\n  returnObject: boolean\n  valueComparator: typeof deepEqual | undefined\n}\n\n// Composables\nexport const makeItemsProps = propsFactory({\n  items: {\n    type: Array as PropType<ItemProps['items']>,\n    default: () => ([]),\n  },\n  itemTitle: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'title',\n  },\n  itemValue: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'value',\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'children',\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'props',\n  },\n  returnObject: Boolean,\n  valueComparator: Function as PropType<typeof deepEqual>,\n}, 'list-items')\n\nexport function transformItem (props: Omit<ItemProps, 'items'>, item: any): ListItem {\n  const title = getPropertyFromItem(item, props.itemTitle, item)\n  const value = getPropertyFromItem(item, props.itemValue, title)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true\n    ? typeof item === 'object' && item != null && !Array.isArray(item)\n      ? 'children' in item\n        ? omit(item, ['children'])\n        : item\n      : undefined\n    : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    title: String(_props.title ?? ''),\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nexport function transformItems (props: Omit<ItemProps, 'items'>, items: ItemProps['items']) {\n  const _props = pick(props, [\n    'itemTitle',\n    'itemValue',\n    'itemChildren',\n    'itemProps',\n    'returnObject',\n    'valueComparator',\n  ])\n\n  const array: ListItem[] = []\n  for (const item of items) {\n    array.push(transformItem(_props, item))\n  }\n\n  return array\n}\n\nexport function useItems (props: ItemProps) {\n  const items = computed(() => transformItems(props, props.items))\n  const hasNullItem = computed(() => items.value.some(item => item.value === null))\n\n  const itemsMap = shallowRef<Map<Primitive, ListItem[]>>(new Map())\n  const keylessItems = shallowRef<ListItem[]>([])\n  watchEffect(() => {\n    const _items = items.value\n    const map = new Map()\n    const keyless = []\n    for (let i = 0; i < _items.length; i++) {\n      const item = _items[i]\n      if (isPrimitive(item.value) || item.value === null) {\n        let values = map.get(item.value)\n        if (!values) {\n          values = []\n          map.set(item.value, values)\n        }\n        values.push(item)\n      } else {\n        keyless.push(item)\n      }\n    }\n    itemsMap.value = map\n    keylessItems.value = keyless\n  })\n\n  function transformIn (value: any[]): ListItem[] {\n    // Cache unrefed values outside the loop,\n    // proxy getters can be slow when you call them a billion times\n    const _items = itemsMap.value\n    const _allItems = items.value\n    const _keylessItems = keylessItems.value\n    const _hasNullItem = hasNullItem.value\n    const _returnObject = props.returnObject\n    const hasValueComparator = !!props.valueComparator\n    const valueComparator = props.valueComparator || deepEqual\n    const _props = pick(props, [\n      'itemTitle',\n      'itemValue',\n      'itemChildren',\n      'itemProps',\n      'returnObject',\n      'valueComparator',\n    ])\n\n    const returnValue: ListItem[] = []\n    main: for (const v of value) {\n      // When the model value is null, return an InternalItem\n      // based on null only if null is one of the items\n      if (!_hasNullItem && v === null) continue\n\n      // String model value means value is a custom input value from combobox\n      // Don't look up existing items if the model value is a string\n      if (_returnObject && typeof v === 'string') {\n        returnValue.push(transformItem(_props, v))\n        continue\n      }\n\n      // Fast path, items with primitive values and no\n      // custom valueComparator can use a constant-time\n      // map lookup instead of searching the items array\n      const fastItems = _items.get(v)\n\n      // Slow path, always use valueComparator.\n      // This is O(n^2) so we really don't want to\n      // do it for more than a couple hundred items.\n      if (hasValueComparator || !fastItems) {\n        for (const item of (hasValueComparator ? _allItems : _keylessItems)) {\n          if (valueComparator(v, item.value)) {\n            returnValue.push(item)\n            continue main\n          }\n        }\n        // Not an existing item, construct it from the model (#4000)\n        returnValue.push(transformItem(_props, v))\n        continue\n      }\n\n      returnValue.push(...fastItems)\n    }\n\n    return returnValue\n  }\n\n  function transformOut (value: ListItem[]): any[] {\n    return props.returnObject\n      ? value.map(({ raw }) => raw)\n      : value.map(({ value }) => value)\n  }\n\n  return { items, transformIn, transformOut }\n}\n","// Styles\nimport './VList.sass'\n\n// Components\nimport { VListChildren } from './VListChildren'\n\n// Composables\nimport { createList } from './list'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps } from '@/composables/list-items'\nimport { makeNestedProps, useNested } from '@/composables/nested/nested'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { computed, ref, shallowRef, toRef } from 'vue'\nimport {\n  EventProp,\n  focusChild,\n  genericComponent,\n  getPropertyFromItem,\n  isPrimitive,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VListChildrenSlots } from './VListChildren'\nimport type { ItemProps, ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\nexport interface InternalListItem<T = any> extends ListItem<T> {\n  type?: 'item' | 'subheader' | 'divider'\n}\n\nfunction transformItem (props: ItemProps & { itemType?: string }, item: any): InternalListItem {\n  const type = getPropertyFromItem(item, props.itemType, 'item')\n  const title = isPrimitive(item) ? item : getPropertyFromItem(item, props.itemTitle)\n  const value = getPropertyFromItem(item, props.itemValue, undefined)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true\n    ? omit(item, ['children'])\n    : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    type,\n    title: _props.title,\n    value: _props.value,\n    props: _props,\n    children: type === 'item' && children ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nfunction transformItems (props: ItemProps & { itemType?: string }, items: (string | object)[]) {\n  const array: InternalListItem[] = []\n\n  for (const item of items) {\n    array.push(transformItem(props, item))\n  }\n\n  return array\n}\n\nexport function useListItems (props: ItemProps & { itemType?: string }) {\n  const items = computed(() => transformItems(props, props.items))\n\n  return { items }\n}\n\nexport const makeVListProps = propsFactory({\n  baseColor: String,\n  /* @deprecated */\n  activeColor: String,\n  activeClass: String,\n  bgColor: String,\n  disabled: Boolean,\n  expandIcon: IconValue,\n  collapseIcon: IconValue,\n  lines: {\n    type: [Boolean, String] as PropType<'one' | 'two' | 'three' | false>,\n    default: 'one',\n  },\n  slim: Boolean,\n  nav: Boolean,\n\n  'onClick:open': EventProp<[{ id: unknown, value: boolean, path: unknown[] }]>(),\n  'onClick:select': EventProp<[{ id: unknown, value: boolean, path: unknown[] }]>(),\n  'onUpdate:opened': EventProp<[]>(),\n  ...makeNestedProps({\n    selectStrategy: 'single-leaf' as const,\n    openStrategy: 'list' as const,\n  }),\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  itemType: {\n    type: String,\n    default: 'type',\n  },\n  ...makeItemsProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'text' } as const),\n}, 'VList')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VList = genericComponent<new <\n  T extends readonly any[],\n  S = unknown,\n  O = unknown\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemChildren?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    selected?: S\n    'onUpdate:selected'?: (value: S) => void\n    'onClick:open'?: (value: { id: unknown, value: boolean, path: unknown[] }) => void\n    'onClick:select'?: (value: { id: unknown, value: boolean, path: unknown[] }) => void\n    opened?: O\n    'onUpdate:opened'?: (value: O) => void\n  },\n  slots: VListChildrenSlots<ItemType<T>>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VList',\n\n  props: makeVListProps(),\n\n  emits: {\n    'update:selected': (value: unknown) => true,\n    'update:activated': (value: unknown) => true,\n    'update:opened': (value: unknown) => true,\n    'click:open': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n    'click:activate': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n    'click:select': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n  },\n\n  setup (props, { slots }) {\n    const { items } = useListItems(props)\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { children, open, parents, select, getPath } = useNested(props)\n    const lineClasses = computed(() => props.lines ? `v-list--${props.lines}-line` : undefined)\n    const activeColor = toRef(props, 'activeColor')\n    const baseColor = toRef(props, 'baseColor')\n    const color = toRef(props, 'color')\n\n    createList()\n\n    provideDefaults({\n      VListGroup: {\n        activeColor,\n        baseColor,\n        color,\n        expandIcon: toRef(props, 'expandIcon'),\n        collapseIcon: toRef(props, 'collapseIcon'),\n      },\n      VListItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor,\n        baseColor,\n        color,\n        density: toRef(props, 'density'),\n        disabled: toRef(props, 'disabled'),\n        lines: toRef(props, 'lines'),\n        nav: toRef(props, 'nav'),\n        slim: toRef(props, 'slim'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    const isFocused = shallowRef(false)\n    const contentRef = ref<HTMLElement>()\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      const target = e.target as HTMLElement\n\n      if (!contentRef.value || ['INPUT', 'TEXTAREA'].includes(target.tagName)) return\n\n      if (e.key === 'ArrowDown') {\n        focus('next')\n      } else if (e.key === 'ArrowUp') {\n        focus('prev')\n      } else if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      } else {\n        return\n      }\n\n      e.preventDefault()\n    }\n\n    function onMousedown (e: MouseEvent) {\n      isFocused.value = true\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (contentRef.value) {\n        return focusChild(contentRef.value, location)\n      }\n    }\n\n    useRender(() => {\n      return (\n        <props.tag\n          ref={ contentRef }\n          class={[\n            'v-list',\n            {\n              'v-list--disabled': props.disabled,\n              'v-list--nav': props.nav,\n              'v-list--slim': props.slim,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            dimensionStyles.value,\n            props.style,\n          ]}\n          tabindex={ props.disabled ? -1 : 0 }\n          role=\"listbox\"\n          aria-activedescendant={ undefined }\n          onFocusin={ onFocusin }\n          onFocusout={ onFocusout }\n          onFocus={ onFocus }\n          onKeydown={ onKeydown }\n          onMousedown={ onMousedown }\n        >\n          <VListChildren\n            items={ items.value }\n            returnObject={ props.returnObject }\n            v-slots={ slots }\n          />\n        </props.tag>\n      )\n    })\n\n    return {\n      open,\n      select,\n      focus,\n      children,\n      parents,\n      getPath,\n    }\n  },\n})\n\nexport type VList = InstanceType<typeof VList>\n","<section><article><v-container><div class=\"text-center\"><h1 class=\"display-1 font-weight-thin\">{{ $t(\"imprintHeader\") }}</h1><h3 class=\"subtitle\">{{ $t(\"imprintSubtitle\") }}</h3></div><v-card max-width=\"300\" tile><v-list dense><v-list-item-group><v-list-item v-for=\"(contactElem, index) in contactDetails\" :key=\"index\"><v-list-item-icon><v-icon>mdi-{{contactElem.icon}}</v-icon></v-list-item-icon><v-list-item-content><v-list-item-title>{{ contactElem.value }}</v-list-item-title></v-list-item-content></v-list-item></v-list-item-group></v-list></v-card></v-container></article></section>","import { render } from \"./Imprint.vue?vue&type=template&id=357731fa&lang=pug\"\nimport script from \"./Imprint.vue?vue&type=script&lang=js\"\nexport * from \"./Imprint.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["Symbol","for","ListKey","createList","parent","inject","hasPrepend","shallowRef","updateHasPrepend","data","value","provide","useList","independentActiveStrategy","mandatory","strategy","activate","_ref","id","activated","toRaw","size","has","add","delete","in","v","children","parents","set","Set","wrapInArray","out","Array","from","independentSingleActiveStrategy","parentStrategy","_ref2","rest","singleSelected","arr","length","slice","leafActiveStrategy","_ref3","leafSingleActiveStrategy","_ref4","singleOpenStrategy","open","opened","newOpened","get","select","multipleOpenStrategy","listOpenStrategy","path","push","independentSelectStrategy","selected","on","entries","reduce","key","map","Map","independentSingleSelectStrategy","leafSelectStrategy","leafSingleSelectStrategy","_ref5","classicSelectStrategy","_ref6","original","items","item","shift","childrenIds","everySelected","every","cid","noneSelected","_ref7","VNestedSymbol","emptyNested","root","register","unregister","ref","openOnSelect","activatable","selectable","selectedValues","getPath","makeNestedProps","propsFactory","Boolean","activeStrategy","String","Function","Object","selectStrategy","openStrategy","useNested","props","isUnmounted","useProxiedModel","values","computed","unshift","onBeforeUnmount","vm","getCurrentInstance","nodeIds","nested","toRef","parentId","isGroup","join","newPath","concat","consoleError","list","filter","child","event","emit","newSelected","newActivated","useNestedItem","uidSymbol","getUid","computedId","undefined","e","isOpen","isActivated","isSelected","isIndeterminate","isLeaf","isGroupActivator","onBeforeMount","useNestedGroupActivator","VListGroupActivator","defineComponent","name","setup","_","slots","default","makeVListGroupProps","activeColor","baseColor","color","collapseIcon","type","IconValue","expandIcon","prependIcon","appendIcon","fluid","subgroup","title","makeComponentProps","makeTagProps","VListGroup","genericComponent","_id","isBooted","useSsrBoot","onClick","stopPropagation","activatorProps","class","toggleIcon","activatorDefaults","VListItem","active","useRender","_createVNode","tag","style","activator","VDefaultsProvider","MaybeTransition","component","VExpandTransition","_withDirectives","_vShow","makeVListItemSubtitleProps","opacity","Number","VListItemSubtitle","VListItemTitle","createSimpleFunctional","makeVListItemProps","activeClass","appendAvatar","disabled","lines","link","nav","prependAvatar","ripple","slim","subtitle","EventProp","onClickOnce","makeBorderProps","makeDensityProps","makeDimensionProps","makeElevationProps","makeRoundedProps","makeRouterProps","makeThemeProps","makeVariantProps","variant","directives","Ripple","emits","click","attrs","useLink","href","uid","isActive","isLink","isSelectable","isClickable","roundedProps","rounded","variantProps","handleActiveLink","watch","val","themeClasses","provideTheme","borderClasses","useBorder","colorClasses","colorStyles","variantClasses","useVariant","densityClasses","useDensity","dimensionStyles","useDimension","elevationClasses","useElevation","roundedClasses","useRounded","lineClasses","slotProps","navigate","onKeyDown","preventDefault","target","dispatchEvent","MouseEvent","Tag","hasTitle","hasSubtitle","hasAppendMedia","hasAppend","append","hasPrependMedia","prepend","deprecate","_mergeProps","linkProps","genOverlays","VAvatar","density","image","VIcon","icon","VListItemAction","start","_Fragment","end","_resolveDirective","makeVListSubheaderProps","inset","sticky","VListSubheader","textColorClasses","textColorStyles","useTextColor","hasText","makeVListChildrenProps","returnObject","VListChildren","itemProps","raw","divider","VDivider","subheader","slotsWithItem","listGroupProps","filterProps","listItemProps","header","makeItemsProps","itemTitle","itemValue","itemChildren","valueComparator","transformItem","getPropertyFromItem","itemType","isPrimitive","omit","_props","transformItems","array","useListItems","makeVListProps","bgColor","VList","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","provideDefaults","isFocused","contentRef","onFocusin","onFocusout","onFocus","relatedTarget","contains","focus","onKeydown","includes","tagName","onMousedown","location","focusChild","_createElementBlock","_createElementVNode","_component_v_container","_withCtx","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","$t","_hoisted_3","_component_v_card","tile","_component_v_list","dense","_component_v_list_item_group","_renderList","contactDetails","contactElem","index","_createBlock","_component_v_list_item","_component_v_list_item_icon","_component_v_icon","_createTextVNode","_component_v_list_item_content","_component_v_list_item_title","i18n","messages","en","imprintHeader","imprintSubtitle","email","address","de","__exports__","render"],"sourceRoot":""}